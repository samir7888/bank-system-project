// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int               @id @default(autoincrement())
  email             String?           @unique
  password          String
  name              String?
  number            String            @unique
  isFrozen          Boolean           @default(false)
  Balance           Balance[]
  sentTransfers     p2pTransfer[]     @relation(name: "FromUserRelation")
  receivedTransfers p2pTransfer[]     @relation(name: "ToUserRelation")
  emergencyCredits  EmergencyCredit[]
}

model p2pTransfer {
  id         Int      @id @default(autoincrement())
  amount     Int
  timestamp  DateTime
  fromUserId Int
  fromUser   User     @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId   Int
  toUser     User     @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  user   User @relation(fields: [userId], references: [id])
}

model MaintenanceAlert {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  type        String // e.g. "ATM", "OnlineBanking", "MobileApp"
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime @default(now())
}

model EmergencyCredit {
  id        Int      @id @default(autoincrement())
  userId    Int
  amount    Int
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}
